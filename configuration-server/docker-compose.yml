version: '3.7'

services:
  digital-plant-db-sql:
    image: postgres:15.3-alpine
    container_name: microservices-sql-db
    environment:
      POSTGRES_DB: "microservices"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -D microservices"]
      interval: 5s
      timeout: 2s
      retries: 25
    ports:
      - "5433:5432"
    volumes:
      - db_microservices_data:/var/lib/postgresql/data
    command: [  "postgres", "-c", "max_connections=400" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  db_microservices_data: { }

